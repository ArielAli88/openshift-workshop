apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: blog
  template: blog
message: Se creara el siguiente servicio al ejecutar este template $NAME
metadata:
  annotations:
    description: Template para despliegue de aplicaciones Openshift Blog.
    iconClass: icon-python
    openshift.io/display-name: Blog Example (Ephemeral).
    openshift.io/documentation-url: https://github.com/gonzaloacosta/workshop-openshift/
    openshift.io/long-description: Este es un template ejemplo para mostrar el despliegue
      de aplicaciones basadas en temples y lanzadas desde el catalogo de Openshift.
    openshift.io/provider-display-name: Semperti
    openshift.io/support-url: https://semperti.com
  labels:
    samples.operator.openshift.io/managed: "true"
  name: blog
  namespace: openshift
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${NAME}
  stringData:
    database-password: ${DATABASE_PASSWORD}
    database-user: ${DATABASE_USER}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
        "kind": "Service"}]'
    name: ${NAME}
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: ${NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    tls:
      termination: edge
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Realiza un seguimiento de los cambios en la imagen de aplicacion
    name: ${NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Define como se construira la aplicacion.
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    postCommit:
      script: ./manage.py test
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: PIP_INDEX_URL
          value: ${PIP_INDEX_URL}
        from:
          kind: ImageStreamTag
          name: python:${PYTHON_VERSION}
          namespace: ${NAMESPACE}
      type: Source
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - env:
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME}
          image: ' '
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 3
          name: blog
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 3
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - blog
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: La URL del repositorio de codigo.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/openshift-katacoda/blog-django-py
- description: Indique el nombre de branch, tag u otra ref. Si no es utilizado se
    usa el branch default.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
- description: Indique el path relativo a su proyecto, si no es indicado se usa el
    directorio raiz.
  displayName: Context Directory
  name: CONTEXT_DIR
- description: Github trigger secret.
  displayName: GitHub Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
- description: Nombre de la aplicacion que vamos a desplegar.
  displayName: Name
  name: NAME
  required: true
  value: blog
- description: Namespace donde recide la imagen python sobre la que se hara el build
    en el BuildConfig.
  displayName: Namespace Base Build
  name: NAMESPACE
  required: true
  value: openshift
- description: Version de la imagen de Python a ser usada (3.6 or latest).
  displayName: Version of Python Image
  name: PYTHON_VERSION
  required: true
  value: latest
- description: Limite maximo de memoria que puede consumir el deploy.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: Dominio de aplicacion con el que sera expuesta la aplicacion.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- displayName: Database Username
  name: DATABASE_USER
  required: true
  value: user
- displayName: Database User Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_PASSWORD
- description: The custom PyPi index URL
  displayName: Custom PyPi Index URL
  name: PIP_INDEX_URL
